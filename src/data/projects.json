[
  {
    "id": "slackday-2023-9",
    "type": "project",
    "dateOrPeriod": "2023-03-24",
    "status": "BEENDET",
    "name": "ChatGPT und co : Anwendungsbereich im LMS",
    "useCases": [],
    "technologyConcepts": ["LMS", "Research", "Moodle Integration"],
    "technologies": "OpenAI API",
    "shortSummary": "Untersuchung von ChatGPT im LMS Moodle: Funktionsumfang, API, Rechtliches, Anwendungsszenarien. Einfacher Prototyp zur API-Integration.",
    "insights": {
      "summary": [
        "Es wurde untersucht, wie ChatGPT im Lernmanagementsystem (LMS) Moodle genutzt werden kann. Dazu wurden der Funktionsumfang von ChatGPT und dessen API analysiert sowie rechtliche Aspekte betrachtet.",
        "**Weiterführende Informationen (Funktionsumfang, API, Rechtliches):**\n*   [Didaktische und rechtliche Perspektiven (ZFW)](https://hss-opus.ub.ruhr-uni-bochum.de/opus4/frontdoor/deliver/index/docId/9734/file/2023_03_06_Didaktik_Recht_KI_Hochschulbildung.pdf)\n*   [ChatGPT und die Zukunft des Lernens (HFD)](https://hochschulforumdigitalisierung.de/de/blog/chatgpt-und-die-zukunft-des-lernens-evolution-statt-revolution)\n*   [KI-Generatoren in der Hochschullehre (MMKH)](https://www.mmkh.de/digitale-lehre/netzwerk-landesinitiativen/ki-generatoren-in-der-hochschullehre.html)",
        "**Mögliche Anwendungsfälle wurden recherchiert, Beispiele finden sich z.B. hier:**\n*   [ChatGPT and AI in Higher Education (UNESCO)](https://unesdoc.unesco.org/ark:/48223/pf0000385146.locale=en)",
        "Anschließend wurde eine einfache, prototypische Integration in Moodle implementiert, um zu testen, wie Anfragen an OpenAI gesendet und Ergebnisse angezeigt werden können (ohne ansprechendes Design)."
      ]
    },
    "imageUrls": ["/src/assets/chat_teacher_setting.png"],
    "relatedLinks": [
      { "label": "Confluence Doku", "url": "https://confluence.ruhr-uni-bochum.de/pages/viewpage.action?pageId=71894996" }
    ],
    "participants": ["Alexander Mikasch"]
  },
  {
    "id": "slackday-2023-8",
    "type": "project",
    "dateOrPeriod": "2023-06-30",
    "status": "BEENDET",
    "name": "Vault-ai / AI-Powered Document Analysis",
    "useCases": [],
    "technologyConcepts": ["RAG", "Document Analysis", "Pinecone", "Vector Database","Research"],
    "technologies": "Pinecone, OpenAI (GPT 3.5)",
    "shortSummary": "Aufsetzen eines RAG-Systems mit Pinecone & GPT 3.5 zur Dokumentenanalyse. Funktionierte, aber Probleme mit Tabellen. Kompetenzaufbau.",
    "insights": {
      "summary": [
        "Ein System zur automatischen Analyse von Dokumenten (RAG - Retrieval Augmented Generation) wurde mit der Vektordatenbank Pinecone und der OpenAI API (GPT 3.5) aufgesetz und analysiert / evaluiert.",
        "Ziel war es, Fragen zu Dokumenteninhalten beantworten zu können. Das System funktionierte grundsätzlich, hatte aber Schwierigkeiten bei der korrekten Verarbeitung von Tabellen in den Dokumenten.",
        "Das Projekt diente dem Kompetenzaufbau im Bereich RAG."
      ]
    },
    "imageUrls": ["/src/assets/vault_rag.png"],
    "relatedLinks": [
       { "label": "Confluence Doku", "url": "https://confluence.ruhr-uni-bochum.de/pages/viewpage.action?pageId=71894985" }
    ],
    "participants": ["Alexander Mikasch"]
  },
  {
    "id": "slackday-2023-11",
    "type": "project",
    "dateOrPeriod": "2023 Q4",
    "status": "BEENDET",
    "name": "Let's Build: LLM Moodle Chatbot (OSKI)",
    "useCases": [],
    "technologyConcepts": ["LMS","RAG","PGSQL / PGVector", "Vector Database", "Chatbot", "Moodle Integration", "ILIAS Integration", "Llama 2"],
    "technologies": "Langchain, LLMs (Llama 2)",
    "shortSummary": "Entwicklung eines RAG-Chatbot-Prototyps für Moodle/ILIAS-Kursinhalte. Erfolgreiche Vorstellung, führte zu Projekt [OSKI](https://www.oski.nrw/).",
    "insights": {
      "summary": [
        "Ein Prototyp für einen Chatbot wurde entwickelt, der auf Basis von Kursinhalten in Moodle Fragen beantworten kann. Hierfür wurde ein simpler RAG-Ansatz (Retrieval Augmented Generation) gewählt, der auf lokaler Infrastruktur mit lokalen Modellen (zuerst Llama 2, später Llama 3) basiert.",
        "Dieser Prototyp wurde erfolgreich bei mehreren Veranstaltungen vorgestellt.",
        "Das positive Feedback führte zur Entstehung des Projekts [OSKI](https://www.oski.nrw/).",
        "Das primäre Ziel dieses initialen Prototyps war ein Machbarkeitsbeweis (Proof of Concept)."
      ]
    },
    "imageUrls": ["/src/assets/oski_rag.png"],
    "relatedLinks": [
       { "label": "GitLab Repo", "url": "https://gitlab.it-services.ruhr-uni-bochum.de/ai-development/" }
    ],
    "participants": ["Tim Trappen", "Alexander Mikasch", "Bastian Schmidt-Kuhl", "Mathias Buttgereit"]
  },
  {
    "id": "slackday-2023-6",
    "type": "project",
    "dateOrPeriod": "2023-12-18",
    "status": "BEENDET",
    "name": "Research Agent (Experiment)",
    "useCases": ["Tool-based Agents"],
    "technologyConcepts": ["Multi-Agent", "Web Scraping", "Summarization", "Search", "Autonomous Agent", "Web Navigation", "Cost Analysis", "Research"],
    "technologies": "GPT 3.5 API, Implied: Agent Framework",
    "shortSummary": "Experimenteller autonomer Research Agent (Suche, Navigation, Analyse). Liefert Bspw. OER-Zusammenfassung. Hoher Token-Verbrauch/Kosten festgestellt.",
    "insights": {
      "summary": [
        "Ein experimenteller \"Research Agent\" wurde entwickelt. Dieses System aus KI-Agenten konnte selbstständig Informationen im Web suchen, Webseiten analysieren, Links folgen und Ergebnisse zusammenfassen.",
        "**Beispiel-Ergebnis (OER-Recherche):**\nDer Agent konnte eine detaillierte Zusammenfassung zu OER-Projekten in Deutschland erstellen, inklusive Zielen, Fortschritten und beteiligten Organisationen (wie OERInfo, Jointly, LOERn etc.). Dies demonstrierte die Fähigkeit, komplexe Informationen aus verschiedenen Quellen zu aggregieren.",
        "**Kosten & Limitierungen:**\nDie Analyse der API-Nutzung (insb. GPT 3.5, aber auch Tests mit GPT-4 für Bilderkennung auf Webseiten) zeigte einen sehr hohen Token-Verbrauch und entsprechend hohe Kosten, besonders bei komplexen Recherchen über viele Webseiten. Dies machte den Ansatz für eine breite Anwendung damals unwirtschaftlich. Eine Alternative wäre der Einsatz lokaler Modelle gewesen, was aber Performance-Einbußen bedeutet hätte.",
        "**Potenzial für LMS:**\n*   Automatisierte Inhaltserstellung: Recherche und Zusammenfassung von Materialien zu Kursthemen.\n*   Aktualisierung von Inhalten: Überwachung von Quellen und Vorschläge für Updates.\n*   Unterstützung für Studierende: Beantwortung komplexer Fragen durch Recherche über Kursmaterialien hinaus.\n*   Wissensmanagement für Lehrende: Aufbau und Pflege einer Wissensdatenbank zu spezifischen Fachbereichen.",
        "**Anmerkung:** Die rasante Entwicklung im Bereich der autonomen Recherche durch große Anbieter (siehe externe Meilensteine Google, OpenAI, Perplexity) hat diesen spezifischen experimentellen Ansatz mittlerweile überholt und bietet teils integrierte, kosteneffizientere Lösungen."
      ]
    },
    "relatedMilestoneIds": ["milestone-google-dr", "milestone-openai-dr", "milestone-perplexity-dr"],
    "imageUrls": [
      "/src/assets/research_agent_1.png", 
      "/src/assets/research_price.png", 
      "/src/assets/research_token_consumtion.png"
    ],
    "participants": ["Alexander Mikasch"]
  },

  {
    "id": "live-transcription-coaching-2024",
    "type": "project",
    "dateOrPeriod": "2024-04-01",
    "status": "BEENDET",
    "name": "Live-Transkription und interaktives Coaching",
    "useCases": ["Voice Agents"],
    "technologyConcepts": ["ASR", "Transcription", "Real-time", "Prompt Engineering", "LLM Comparison", "Whisper","Moodle Integration"],
    "technologies": "Whisper (lokal), LLMs (LLama Local, GPT4 und GPT3.5), Vue.js 3",
    "shortSummary": "Entwicklung eines Coaching-Tools mit Live-Transkription (Whisper lokal) und Echtzeit-Feedback durch LLMs (lokal/online).",
    "insights": {
      "summary": [
        "Im Rahmen eines Selbstqualifizierungsprojekts wurde ein innovatives Coaching-Tool prototypisch entwickelt. Ziel war die Demonstration einer Anwendung, die Live-Feedback ermöglicht, Lern- und Entwicklungsprozesse unterstützt und Benutzer interaktiv durch verschiedene Szenarien führt.",
        "Das Tool nutzt lokal ausgeführtes Whisper zur direkten Transkription von Sprachnachrichten. Dieser Prototyp wurde auf dem Moodle-Hochschultreffen 2024 in Leipzig vorgestellt, um die Möglichkeiten interaktiver Coaching-Anwendungen aufzuzeigen.",
        "Für die Analyse der Transkripte und die Generierung von Feedback wurden verschiedene Sprachmodelle evaluiert, darunter Online-Dienste (GPT-4, GPT-3.5 via API) und lokale Modelle (z.B. Llama). Dabei wurden auch unterschiedliche Prompting-Techniken (0-Shot, Few-Shot, CoT) verglichen.",
        "Die Nutzung lokaler Sprachmodelle für die Analyse erfordert eine zusätzliche lokale LLM-Instanz, beispielsweise betrieben mittels LM Studio.",
        "**Mögliche Anwendungsszenarien in LMS:**\n*   Echtzeit-Feedback zu mündlichen Präsentationen oder Ausspracheübungen.\n*   Automatische Transkription von Audio-/Video-Beiträgen in Foren oder Aufgaben.\n*   Interaktive Sprachlerntools mit sofortiger Rückmeldung.\n*   Unterstützung bei der Barrierefreiheit durch Live-Untertitelung.\n*   Entwicklung spezialisierter Coaching-Bots für bestimmte Lernziele oder Fähigkeiten."
      ]
    },
    "imageUrls": [
      "/src/assets/speach_to_feedback.png"
    ],
    "participants": ["Alexander Mikasch", "Bastian Schmidt-Kuhl", "Annika Lambert"]
  },
  {
    "id": "slackday-2024-15",
    "type": "project",
    "dateOrPeriod": "2024-06-28; 2024-07-24",
    "status": "BEENDET",
    "name": "PoC Multi-Agent-System für Moodle-Plugins",
    "useCases": ["Coding Agents", "Workflow Automation"],
    "technologyConcepts": ["Multi-Agent", "Code Generation", "Plugin Development", "Moodle", "Autonomous Agent","Research"],
    "technologies": "Python, Langchain/LangGraph, GPT-4/Claude 3.5 Sonnet",
    "shortSummary": "Entwicklung eines Multi-Agenten-Systems zur automatischen Erstellung einfacher Moodle-Plugins (Analyse, Design, Code, Test).",
    "insights": {
      "summary": [
        "**Thema:** Konzeption und Entwicklung eines Proof of Concept (PoC) für ein Multi-Agent-System, das in der Lage ist, prototypische Moodle-Plugins in einer neuen Moodle-Instanz automatisch zu erstellen. Dieses System soll demonstrieren, wie intelligente Agenten in Zukunft inder Lage sein könnten, den Entwicklungsprozess von Moodle-Plugins zu beschleunigen und dabei die Effizienz und Innovationsfähigkeit in der Bildungssoftwareentwicklung zu steigern.",
        "**Fragestellung:** Die zentrale Fragestellung des Berichts lautet: Wie kann ein Multi-Agent-System konzipiert und implementiert werden, um automatisch prototypische Moodle-Plugins in einer neuen Moodle-Instanz zu erstellen und welche Herausforderungen und Lernmöglichkeiten ergeben sich dabei?",
        "**Erläuterung:** Das Eintages-Projekt zielt darauf ab, ein Konzept zu entwickeln, bei dem verschiedene intelligente Agenten zusammenarbeiten, um den Entwicklungsprozess von Moodle-Plugins zu automatisieren. Jeder Agent übernimmt eine spezifische Rolle, wie Anforderungsanalyse, Design, Code-Generierung und Testen.",
        "**Technologien:** Python, Langchain/LangGraph, GPT-4/Claude 3.5 Sonnet",
        "Konzeption und Start der Entwicklung eines 'Proof of Concept' (PoC) für ein System aus mehreren KI-Agenten.",
        "Ziel war es, dass diese Agenten zusammenarbeiten, um automatisch einfache Moodle-Plugins zu erstellen (Analyse, Design, Code, Test). Dies sollte  die Plugin-Prototyp-Entwicklung effizienter machen.",
        "Es wurde eine erste Version des Prototyps erstellt, die grundlegenden Plugins erstellen konnte, leider mit einigen Fehlern. ",
        "Tests wurden gemacht mitz.B. Quiz-Response-Export, Moodle-Snake-Game, Moodle-Course-Translator",
        "Das Thema wurde als relativ umfangreich bewertet. Eine Weiterentwicklung über den initialen Ansatz hinaus hätte voraussichtlich mehrere Wochen an Entwicklungszeit erfordert.",
        "Zudem wurden bald darauf alternative Werkzeuge wie Cursor, Cline und RooCode verfügbar, die analysiert wurden und als vielversprechende Ansätze für KI-unterstützte Code-Generierung eingeschätzt wurden.",
        "Hiermit lassen sich schon erste Plugins erstellen, die dann in der Praxis genutzt werden könnten siehe Anhang."
      ]

    },
    "imageUrls": [
      "/src/assets/ilias_importer.png",
      "/src/assets/moodle_konvert.png",
      "/src/assets/moodle_konvert.png"
    ],
    "participants": ["Alexander Mikasch"]
  }, {
    "id": "devcamp-2024-9",
    "type": "project",
    "dateOrPeriod": "Start 2024-09-03/04",
    "status": "BEENDET",
    "name": "Multi-Agent RAG-System für den Moodle-Support (DevCamp Wien)",
    "useCases": ["Moodle Support", "Multi-Agent", "RAG", "Workflow Automation"],
    "technologyConcepts": ["Multi-Agent", "RAG", "Vector Database", "Webcrawler", "Moodle Plugin", "Support"],
    "technologies": "Langchain, GPT-4, Vector Database, Moodle Plugin",
    "shortSummary": "Prototyp eines Multi-Agent RAG-Systems zur Automatisierung des Moodle-Supports, entwickelt in 48 Stunden beim MoodleMoot DevCamp Wien.",
    "insights": {
      "summary": [
        "Beim MoodleMoot DevCamp in Wien wurde in nur 48 Stunden ein funktionsfähiger Prototyp erstellt.",
        "Ziel ist es, den Support für Studierende, Lehrende und Mitarbeitende zu verbessern, indem Anfragen automatisiert bearbeitet werden und Routineaufgaben entfallen.",
        "**Funktionsweise des Systems:** Kleine spezialisierte Agenten führen einen mehrstufigen Retrieval-Prozess durch und nutzen eine Vektordatenbank, um passende Antworten zu finden.",
        "Konnte keine Lösung gefunden werden, ist eine Eskalation an externe vorgesehen.",
        "**Komponenten:** Webcrawler strukturiert Moodle-Dokumentationen; zukünftige Erweiterungen sollen PDF- und Bild-Verarbeitung ermöglichen.",
        "**Support Companion Plugin:** Ein Moodle-Plugin automatisiert Aufgaben wie Kurserstellung; aktuell noch nicht vollständig integriert, aber Tests sind vielversprechend. **Hinweis:** Dieses Projekt wurde in einen weiteren Projekt umgesetzt und vervollständigt."
      ]
    },
    "imageUrls": ["/src/assets/RAG_Support.png",
    "/src/assets/rag_graph_visualization.png"],
    "participants": ["Dr. Laura Troost", "Nikolai Jahreis", "Aly Sayed", "Jasmin vom Brocke", "Paola Maneggia", "Wolfgang Baier", "Alexander Mikasch", "Bastian Schmidt-Kuhl"]
  },
  {
    "id": "ki-oer-kurserstellung-orca-2024",
    "type": "project",
    "dateOrPeriod": "2024-10",
    "status": "BEENDET",
    "name": "Sinnvolle KI-Nutzung für OER: Von der Suche zur Kurserstellung (Vortrag und Prototyp für ORCA.nrw-Tagung)",
    "useCases": ["Moodle Integration", "Automated Course Development", "Educational Technology", "Proof of Concept"],
    "technologyConcepts": ["OERSI", "Moodle Webservice", "LangGraph", "React", "Chainlit"],
    "technologies": "AI Assistant, OERSI API, Moodle API, React, Chainlit",
    "shortSummary": "Proof of Concept (PoC) einer OER-Suche für die ORCA.nrw-Tagung, mit einer React-Anwendung und Chainlit-Backend zur Suche in OERSI. Demonstriert auch ein Konzept zur KI-gestützten Kurserstellung mit Moodle-Integration.",
    "insights": {
      "summary": [
        "**PoC für ORCA.nrw-Tagung (OER-Suche):**",
        "Das System umfasst ein System mit vier Akteuren (Assistent, User, OERSI, Moodle Webservice), das die Kurs- und Inhaltserstellung auf Basis von OERs erleichtert.",
        "Der Agent führt den Nutzer, während der Moodle Webservice die Erstellung von Kursen und Inhalten in Moodle übernimmt."
  ]
    },
    "imageUrls": [
      "/src/assets/oer_assistant_start.png",
      "/src/assets/oer_assistant_chat_search_math.png",
      "/src/assets/oer_assistant_process.png",
      "/src/assets/oer_assistant_course_create.png"
    ],
    "relatedLinks": [
      { "label": "GitHub Repository (PoC)", "url": "https://github.com/Freakrider/orca_oer_demo" }
    ],
    "participants": ["Alexander Mikasch", "Bastian Schmidt-Kuhl"]
  },
  {
    "id": "agentic-mesh-research-2024",
    "type": "project",
    "dateOrPeriod": "2024-12-13",
    "status": "BEENDET",
    "name": "Agentic Mesh und sonstige Autonome Dynamisches Multi-Agenten-System und Protokolle",
    "useCases": [
      "Automated Course Development", 
      "Personalized Learning Paths", 
      "Adaptive Teaching", 
      "Intelligent Tutoring", 
      "Automated Feedback", 
      "Automated Assessment", 
      "Resource Recommendation", 
      "OER Integration", 
      "Data-driven Quality Control", 
      "Administrative Automation", 
      "Research Support", 
      "Strategic Steering"
    ],
    "technologyConcepts": [
      "Multi-Agent Systems", 
      "Agentic Mesh", 
      "Agent Twin", 
      "Event-Driven Architecture (EDA)", 
      "Semantic Knowledge Graph", 
      "Autonomous Agent", 
      "Research"
    ],
    "technologies": "LLMs, Wissensgraphen-Technologien, Kommunikationsprotokolle (HTTP/REST), ggf. Kafka",
    "shortSummary": "Ein Tages Research zu Agentic Mesh, Agent Twin, EDA und dynamischen Multi-Agenten-Systemen für autonome Aufgabenbearbeitung in Moodle via HTTP/REST, semantischem Graphen & LLMs. Beleuchtet Moodle-Anwendungsfälle und technische Konzepte wie Agenten-Registrierung und Task-Management.",
    "insights": {
      "summary": [
        "**Prozessübersicht: Dynamisches Multi-Agenten-System in Moodle:**",
        "Es wurde untersucht, wie ein erweiterbares Multi-Agenten-System per HTTP/REST, semantischem Wissensgraph und LLM-Integration in Moodle-Plugins Aufgaben autonom bearbeitet und neue Agenten on-the-fly integriert.",
        "Agenten-Registrierung: Jeder Specialized Agent meldet sich per POST /agents/register beim Registry Service mit Fähigkeiten und Endpunkt-URL an.",
        "Aufgabe einreichen: Nutzer senden über das React-Plugin in Moodle ihre Anfrage (z. B. \"Quiz erstellen\") per REST/JSON an den Task Manager.",
        "Intent & Kontext: Task Manager ruft LLM-Agent (Intent-Parsing) und Wissens-Agent (SPARQL-Query) ab, um die Anfrage zu strukturieren und mit Domänenwissen anzureichern.",
        "Subtask-Dispatch: Task Manager erhält aktuelle Agentenliste via GET /agents/list und verteilt Subtasks als JSON an passende Specialized Agents.",
        "Wissens-Abruf: Specialized Agents holen bei Bedarf Fakten per JSON-Query vom Wissens-Agent.",
        "Ergebnisrücklauf: Jeder Agent liefert sein Teilergebnis als JSON an den Task Manager zurück.",
        "Aggregation & Rückgabe: Task Manager fasst alle Teilergebnisse zusammen und sendet das finale JSON an das React-Frontend, das es in Moodle darstellt.",
        "**Research Report: Agentic Mesh, Agent Twin und Event-Driven Architekturen:**",
        "In der digitalen Transformation bieten Agentic Mesh, Agent Twin und event-driven Architekturen (EDA) ein zukunftsweisendes Fundament für autonome, skalierbare und resiliente Systeme. Das Agentic Mesh ermöglicht eine dezentrale Koordination spezialisierter KI-Agenten, die in Echtzeit zusammenarbeiten. Durch die Integration von Event-Driven Design (z. B. via Apache Kafka) reagieren diese Agenten dynamisch auf Ereignisse und passen Workflows adaptiv an.",
        "Agent Twins fungieren als digitale Replikate realer Entitäten und optimieren Entscheidungen durch Simulationen und Datenanalysen.",
        "**Definition: Agentic Mesh:**",
        "Bezeichnet ein dezentrales Ökosystem aus KI-Agenten, die sich registrieren, kooperieren und gemeinsam komplexe Aufgaben lösen.",
        "**Kernkomponenten:**",
        "Registry – Verzeichnis aller Agenten mit ihren Fähigkeiten und Reputation.",
        "Marketplace – Marktplatz, auf dem Teilaufgaben ausgeschrieben und Agenten zugewiesen werden.",
        "Trust & Safety – Mechanismen zur Prüfung von Zuverlässigkeit, Sicherheit und ethischer Konformität.",
        "Kommunikationssystem – APIs und Protokolle als \"Mesh\"-Netzwerk für direkten Datenaustausch zwischen Agenten.",
        "**Ablauf:**",
        "Aufgabe wird analysiert und in Teilaufgaben zerlegt.",
        "Passende Agenten werden über Registry und Marketplace gefunden und geprüft.",
        "Agenten arbeiten parallel über das Kommunikationssystem zusammen.",
        "Ergebnisse werden aggregiert, geliefert und fließen als Feedback in die Registry für kontinuierliches Lernen.",
        "**Vorteile:**",
        "Skalierbarkeit: Neue Agenten lassen sich nahtlos integrieren.",
        "Fehlertoleranz: Bei Ausfall springt ein anderer Agent ein.",
        "Effizienz: Spezialisierte Agenten arbeiten parallel und adaptiv.",
        "**Anwendungsfelder des Agentic Mesh in und um Moodle im Kontext der Universitätsstrategie:**",
        "Automatisierte Kursentwicklung & -pflege: Agenten können Lerninhalte aus OER-Datenbanken (z. B. OERSI, Sciebo) abrufen, strukturieren und zu Kursmodulen zusammenfügen. So lassen sich neue Kurse deutlich schneller erstellen und laufend aktualisieren.",
        "Personalisierte Lernpfade & Adaptive Lehre: Auf Basis von Lernhistorie, Leistung und Interessen generieren spezialisierte Agenten adaptive Empfehlungspfade für Studierende. Sie schlagen individuelle Übungen vor, passen Schwierigkeit an und empfehlen Zusatzmaterial.",
        "Intelligente Tutoren & Assistenz: Language-Agents übernehmen Chat- oder Foren-Support, beantworten in natürlicher Sprache Fragen zu Kursinhalten, Terminplänen und Prüfungsregeln – rund um die Uhr und entlasten Lehrende.",
        "Automatisiertes Feedback & Assessment: Behavior-Agents analysieren eingereichte Aufgaben (Programmcode, Essays) und geben automatisiertes Feedback zu Stil, inhaltlicher Korrektheit oder Code-Qualität. Prüfungsaufgaben lassen sich so effizient vorbewerten.",
        "Ressourcen-Empfehlung & OER-Integration: Marketplace-Agenten durchsuchen Bibliotheks-, Repositoriums- und OER-Bestände, vergleichen Lizenzen, und kuratieren passende Literatur oder Medien direkt im Moodle-Kurs.",
        "Datengetriebene Qualitäts- und Erfolgskontrolle: Predictive-Analytics-Agenten überwachen Lernstatistiken, identifizieren Abbruch- oder Risikogruppen frühzeitig und liefern Dashboards für Hochschulleitung und Qualitätsmanagement.",
        "Verwaltungs- und Organisationsprozesse: Agenten können Terminkoordination (Raum-, Ressourcenplanung), Anmeldeprozesse oder Prüfungsverwaltung automatisieren, indem sie E-Mails versenden, Deadlines überwachen und Eskalationen auslösen.",
        "Forschungsunterstützung & Wissensmanagement: Spezialisierte Agenten unterstützen Wissenschaftler bei Literatursuche, Datenanalyse und Berichtsgenerierung; sie fassen relevante Papers zusammen und bereiten Ergebnisse für interne Strategie-Meetings auf.",
        "Strategische Steuerung & Entscheidungshilfe: Ein Agentic-Mesh-Cockpit bietet Hochschulleitungen Echtzeit-Einblicke in KPIs (Studierendenzahlen, Kursbewertungen, Ressourcenauslastung) und simuliert strategische Szenarien (z. B. Kapazitätserweiterung, Budgetallokation).",
        "**Hinweis:** Zu den Research gibt es noch diverse Skizzen und Ausarbeitungen. Hier jedoch nur eine Zusammenfassung, bei Interesse gerne melden."
      ]
    },
    "imageUrls": ["/src/assets/agentic_architektur.png","/src/assets/flow_agentic_mesh.png"],
    "relatedLinks": [],
    "participants": ["Alexander Mikasch"]
  },
  {
    "id": "wiki-system-2025",
    "type": "project",
    "dateOrPeriod": "2025-01-10",
    "status": "BEENDET",
    "name": "Selbstlernendes Wiki-System (DokuWiki)",
    "useCases": ["Workflow Automation"],
    "technologyConcepts": ["Clustering", "Keyword Extraction", "DokuWiki", "Self-Learning", "Topic Modeling"],
    "technologies": "DokuWiki, Docker,Langchain, LangGraph, OpenAI API, Jina AI",
    "shortSummary": "PoC: Entwicklung eines selbstlernenden Wiki-Systems (DokuWiki) mit KI zur autom. Themenidentifikation, Clustering & Strukturierung.",
    "insights": {
      "summary": [
        "Entwicklung eines Wiki-Systems (basiert auf DokuWiki) für die Kooperation mit Moodle an Hochschulen E.V., das mithilfe von KI selbstständig lernt, Inhalte zu organisieren.",
        "Es nutzt KI (Keyword-Extraktion, OpenAI-Themengenerierung, Clustering) um automatisch Themen in Wiki-Seiten zu erkennen, zu gruppieren und eine dynamische Struktur aufzubauen.",
        "Die Anbindung an DokuWiki (Seiten erstellen/ändern) funktioniert. "
      ]
    },
    "relatedLinks": [
       { "label": "Confluence Doku", "url": "https://confluence.ruhr-uni-bochum.de/pages/viewpage.action?pageId=120033721" }
    ],
    "participants": ["Alexander Mikasch"]
  }
 
] 